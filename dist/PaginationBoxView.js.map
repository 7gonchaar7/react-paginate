{"version":3,"sources":["../react_components/PaginationBoxView.js"],"names":["PaginationBoxView","props","callCallback","selectedItem","onPageChange","selected","pagination","items","pageCount","pageRangeDisplayed","index","state","pathname","activeClassName","leftSide","rightSide","page","breakView","pageView","marginPagesDisplayed","keys","Object","breakLabelKey","length","breakLabelValue","breakLabel","breakClassName","initialPage","forcePage","nextProps","setState","containerClassName","previousClassName","nextClassName","disabledClassName","previousClasses","nextClasses","relPrev","relNext","rel","prevLinkQuery","nextLinkQuery","prevLinkProps","assign","to","query","nextLinkProps","propTypes","number","isRequired","previousLabel","node","nextLabel","func","string","pageClassName","pageLinkClassName","previousLinkClassName","nextLinkClassName","defaultProps"],"mappings":"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","file":"PaginationBoxView.js","sourcesContent":["'use strict';\n\nimport React, { Component, PropTypes } from 'react';\nimport classNames from 'classnames';\n\nimport createFragment from 'react-addons-create-fragment';\nimport Link from 'react-router/lib/Link';\nimport PageView from './PageView';\nimport BreakView from './BreakView';\n\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount             : PropTypes.number.isRequired,\n    pageRangeDisplayed    : PropTypes.number.isRequired,\n    marginPagesDisplayed  : PropTypes.number.isRequired,\n    previousLabel         : PropTypes.node,\n    nextLabel             : PropTypes.node,\n    breakLabel            : PropTypes.node,\n    onPageChange          : PropTypes.func,\n    initialPage           : PropTypes.number,\n    forcePage             : PropTypes.number,\n    pathname              : PropTypes.string,\n    containerClassName    : PropTypes.string,\n    pageClassName         : PropTypes.string,\n    pageLinkClassName     : PropTypes.string,\n    activeClassName       : PropTypes.string,\n    previousClassName     : PropTypes.string,\n    nextClassName         : PropTypes.string,\n    previousLinkClassName : PropTypes.string,\n    nextLinkClassName     : PropTypes.string,\n    disabledClassName     : PropTypes.string,\n    breakClassName        : PropTypes.string\n  };\n\n  static defaultProps = {\n    pageCount            : 10,\n    pageRangeDisplayed   : 2,\n    marginPagesDisplayed : 3,\n    activeClassName      : \"selected\",\n    previousClassName    : \"previous\",\n    nextClassName        : \"next\",\n    previousLabel        : \"Previous\",\n    nextLabel            : \"Next\",\n    breakLabel           : \"...\",\n    disabledClassName    : \"disabled\"\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: props.initialPage ? props.initialPage :\n                props.forcePage   ? props.forcePage :\n                0\n    };\n  }\n\n  componentDidMount() {\n    // Call the callback with the initialPage item:\n    if (typeof(this.props.initialPage) !== 'undefined') {\n      this.callCallback(this.props.initialPage);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (typeof(nextProps.forcePage) !== 'undefined' && this.props.forcePage !== nextProps.forcePage) {\n      this.setState({selected: nextProps.forcePage});\n    }\n  }\n\n  callCallback = (selectedItem) => {\n    if (typeof(this.props.onPageChange) !== \"undefined\" &&\n        typeof(this.props.onPageChange) === \"function\") {\n      this.props.onPageChange({selected: selectedItem});\n    }\n  };\n\n  pagination = () => {\n    let items = {};\n\n    if (this.props.pageCount <= this.props.pageRangeDisplayed) {\n\n      for (let index = 0; index < this.props.pageCount; index++) {\n        items['key' + index] = <PageView\n          selected={this.state.selected === index}\n          pathname={this.props.pathname}\n          activeClassName={this.props.activeClassName}\n          page={index + 1} />\n      }\n\n    } else {\n\n      let leftSide  = (this.props.pageRangeDisplayed / 2);\n      let rightSide = (this.props.pageRangeDisplayed - leftSide);\n\n      if (this.state.selected > this.props.pageCount - this.props.pageRangeDisplayed / 2) {\n        rightSide = this.props.pageCount - this.state.selected;\n        leftSide  = this.props.pageRangeDisplayed - rightSide;\n      }\n      else if (this.state.selected < this.props.pageRangeDisplayed / 2) {\n        leftSide  = this.state.selected;\n        rightSide = this.props.pageRangeDisplayed - leftSide;\n      }\n\n      let index;\n      let page;\n      let breakView;\n\n      for (index = 0; index < this.props.pageCount; index++) {\n\n        page = index + 1;\n\n        let pageView = (\n          <PageView\n            selected={this.state.selected === index}\n            pathname={this.props.pathname}\n            activeClassName={this.props.activeClassName}\n            page={index + 1} />\n        );\n\n        if (page <= this.props.marginPagesDisplayed) {\n          items['key' + index] = pageView;\n          continue;\n        }\n\n        if (page > this.props.pageCount - this.props.marginPagesDisplayed) {\n          items['key' + index] = pageView;\n          continue;\n        }\n\n        if ((index >= this.state.selected - leftSide) && (index <= this.state.selected + rightSide)) {\n          items['key' + index] = pageView;\n          continue;\n        }\n\n        let keys            = Object.keys(items);\n        let breakLabelKey   = keys[keys.length - 1];\n        let breakLabelValue = items[breakLabelKey];\n\n        if (this.props.breakLabel && breakLabelValue !== breakView) {\n          breakView = (\n            <BreakView\n              breakLabel={this.props.breakLabel}\n              breakClassName={this.props.breakClassName}\n            />\n          );\n\n          items['key' + index] = breakView;\n        }\n      }\n    }\n\n    return items;\n  };\n\n  render() {\n    const { containerClassName, previousClassName, nextClassName,\n      pathname, pageCount, disabledClassName, forcePage } = this.props;\n    const previousClasses = classNames(previousClassName,\n      {[disabledClassName]: this.state.selected === 0});\n\n    const nextClasses = classNames(nextClassName,\n      {[disabledClassName]: this.state.selected === pageCount - 1});\n    let relPrev = {};\n    let relNext = {};\n    if (forcePage > 0) relPrev = { rel: 'prev' };\n    if (forcePage < pageCount - 1) relNext = { rel: 'next' };\n    const prevLinkQuery = forcePage !== 1 ? { page: forcePage } : {};\n    const nextLinkQuery = { page: forcePage + 2 };\n    const prevLinkProps = Object.assign({ to: { pathname, query: prevLinkQuery } }, relPrev);\n    const nextLinkProps = Object.assign({ to: { pathname, query: nextLinkQuery } }, relNext);\n    \n    return (\n      <ul className={containerClassName}>\n        <li className={previousClasses}>\n          <Link {...prevLinkProps}>\n            <i className=\"fa fa-chevron-left\"/>\n          </Link>\n        </li>\n        {createFragment(this.pagination())}\n        <li className={nextClasses}>\n          <Link {...nextLinkProps}>\n            <i className=\"fa fa-chevron-right\"/>\n          </Link>\n        </li>\n      </ul>\n    );\n  }\n};\n"]}